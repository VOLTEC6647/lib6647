import org.gradle.internal.os.OperatingSystem

plugins {
    id "java-library"
    id "maven-publish"
    id "edu.wpi.first.GradleRIO"
}

group = "com.github.VOLTEC6647"
version = "v1.3.0"

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()

    String frcYear = "2020"
    File frcHome
    if (OperatingSystem.current().isWindows()) {
        String publicFolder = System.getenv("PUBLIC")
        if (publicFolder == null) {
            publicFolder = "C:\\Users\\Public"
        }
        def homeRoot = new File(publicFolder, "wpilib")
        frcHome = new File(homeRoot, frcYear)
    } else {
        def userFolder = System.getProperty("user.home")
        def homeRoot = new File(userFolder, "wpilib")
        frcHome = new File(homeRoot, frcYear)
    }
    def frcHomeMaven = new File(frcHome, "maven")
    maven {
        name "frcHome"
        url frcHomeMaven
    }

    maven { url "https://frcmaven.wpi.edu/artifactory/release/" } // Used by WPILib.
    maven { url "https://devsite.ctr-electronics.com/maven/release/" } // Used by CTRE Phoenix libraries.
	maven { url "http://www.revrobotics.com/content/sw/max/sdk/maven/" } // Used by REV Robotics libraries.
    maven { url "https://repo1.maven.org/maven2/" } // Used by NavX libraries.
}

// Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.
// Also defines JUnit 4.
dependencies {
    // WPILib dependencies.
    implementation wpi.deps.wpilib()
    nativeZip wpi.deps.wpilibJni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.wpilibJni(wpi.platforms.desktop)

    implementation wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

    implementation group: "edu.wpi.first.wpilibNewCommands", name: "wpilibNewCommands-java", version: "2020.3.2"
    implementation group: "edu.wpi.first.wpilibOldCommands", name: "wpilibOldCommands-java", version: "2020.3.2"

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "2.10.2"
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: "com.fasterxml.jackson.core", name: "jackson-core", version: "2.10.2"
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
    implementation group: "com.fasterxml.jackson.core", name: "jackson-annotations", version: "2.10.2"

    // Phoenix CTRE dependencies.
    implementation group: "com.ctre.phoenix", name: "api-java", version: "5.18.2"
    implementation group: "com.ctre.phoenix", name: "wpiapi-java", version: "5.18.2"

    testImplementation group: "com.ctre.phoenix", name: "cci", version: "5.18.2"
    testImplementation group: "com.ctre.phoenix", name: "diagnostics", version: "5.18.2"
    testImplementation group: "com.ctre.phoenix", name: "canutils", version: "5.18.2"
    testImplementation group: "com.ctre.phoenix", name: "platform-stub", version: "5.18.2"
    testImplementation group: "com.ctre.phoenix", name: "core", version: "5.18.2"

	// REV Robotics dependencies.
	implementation group: "com.revrobotics.frc", name: "SparkMax-java", version: "1.5.1"

	testImplementation group: "com.revrobotics.frc", name: "SparkMax-driver", version: "1.5.1"

    // Kauai Labs dependencies.
    implementation group: "com.kauailabs.navx.frc", name: "navx-java", version: "3.1.409"

    // Use JUnit test framework
    testImplementation "junit:junit:4.12"
}

compileJava {
    options.compilerArgs << "-parameters" << "-Xlint:all"
}

compileTestJava {
    options.compilerArgs << "-parameters" << "-Xlint:all"
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = "lib6647"
            from components.java

            pom {
                name = "lib6647"
                description = "Team 6647's library for JSON-oriented object initialization, among other things."
                url = "https://lib6647.readthedocs.io/"
                licenses {
                    license {
                        name = "BSD License for WPILib code"
                        url = "https://github.com/wpilibsuite/allwpilib/blob/master/LICENSE.txt"
                    }
                }
                developers {
                    developer {
                        id = "pacoito123"
                        name = "Francisco Rubio"
                        email = "pacoito@protonmail.com"
                    }
                    developer {
                        id = "ianyan11"
                        name = "Ian De La Garza"
                        email = "iandelagg@gmail.com"
                    }
                }
            }
        }
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}